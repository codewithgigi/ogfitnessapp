type Profile
  @model
  @aws_cognito_user_pools
  @auth(
    rules: [
      { allow: owner, ownerField: "user" }
      { allow: groups, groups: ["Admin"] }
    ]
  ) {
  id: ID!
  user: String
  email: String
  onboarding: Onboarding
  weight: [Weight]
  progressPhotos: [ProgressPhotos]
  workoutResults: [WorkoutResult]
  exerciseResults: [ExerciseResult]
}

type WorkoutResult {
  workoutId: String
  date: AWSDate
  notes: String
}
type ExerciseResult {
  exerciseId: String
  date: AWSDate
  notes: String
}

type Onboarding {
  goal: String
  gender: String
  age: String
  experience: String
  compete: String
  competeLevel: String
}

type Weight {
  weight: Float
  date: AWSDate
}

type ProgressPhotos {
  frontImage: String
  sideImage: String
  backImage: String
  date: AWSDate
}

type Exercise
  @model
  @aws_cognito_user_pools
  @auth(
    rules: [
      { allow: groups, groups: ["Admin"] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  name: String!
  instructions: String
  image: String
  video: String
  sets: String
  reps: String
}

enum Level {
  beginner
  experienced
}

type Program
  @model
  @auth(
    rules: [
      { allow: groups, groups: ["Admin"], operations: [create, delete, update] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  name: String
  description: String
  instructions: String
  active: Boolean
  goal: [String]
  gender: [String]
  age: [String]
  level: [Level]
  weeks: Int
  workoutList: [WorkoutList]
}

type WorkoutList {
  id: String
  name: string
  day: Int
  week: Int
  warmup: WarmupCooldown
  cooldown: WarmupCooldown
  exercises: ExerciseList
}

type WarmupCooldown {
  instructions: String
  video: String
  image: String
}

type ExerciseList {
  name: String!
  instructions: String
  image: String
  video: String
  sets: String
  reps: String
}
